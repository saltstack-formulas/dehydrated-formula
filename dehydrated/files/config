{% from "dehydrated/map.jinja" import dehydrated with context %}
{% set cfg_client = salt['pillar.get']('dehydrated:config', {}) -%}
{% do cfg_client.update({
	   'basedir': dehydrated.basedir,
	   'domains-txt': dehydrated.domains_txt,
	   'dehydrated_user': dehydrated.user,
	   'dehydrated_group': dehydrated.group,
   })
-%}
{%- if use_default_hook -%}
{%- do cfg_client.setdefault('hook', dehydrated.hook_script) -%}
{%- endif -%}
{%- macro get_config(configname, default_value) -%}
{%- set varname = configname.replace("-", "_") -%}
{%- if configname in cfg_client -%}
{{ varname|upper }}="{{ cfg_client[configname] }}"
{%- else -%}
#{{ varname|upper }}="{{ default_value }}"
{%- endif -%}
{%- endmacro -%}
# This file is managed by Salt, do not edit by hand!
# Based on dehydrated version 0.3.0 default config

########################################################
# This is the main config file for dehydrated          #
#                                                      #
# This file is looked for in the following locations:  #
# $SCRIPTDIR/config (next to this script)              #
# /usr/local/etc/dehydrated/config                     #
# /etc/dehydrated/config                               #
# ${PWD}/config (in current working-directory)         #
#                                                      #
# Default values of this config are in comments        #
########################################################

# Which user should dehydrated run as? This will be implicitly enforced when running as root
{{ get_config('dehydrated_user', '') }}

# Which group should dehydrated run as? This will be implicitly enforced when running as root
{{ get_config('dehydrated_group', '') }}

# Resolve names to addresses of IP version only. (curl)
# supported values: 4, 6
# default: <unset>
{{ get_config('ip_version', '') }}

# URL to certificate authority or internal preset
# Presets: letsencrypt, letsencrypt-test, zerossl, buypass, buypass-test
# default: letsencrypt
{{ get_config('ca', 'https://acme-v01.api.letsencrypt.org/directory') }}

# Path to old certificate authority
# Set this value to your old CA value when upgrading from ACMEv1 to ACMEv2 under a different endpoint.
# If dehydrated detects an account-key for the old CA it will automatically reuse that key
# instead of registering a new one.
# default: https://acme-v01.api.letsencrypt.org/directory
{{ get_config('oldca', 'https://acme-v01.api.letsencrypt.org/directory') }}

# Which challenge should be used? Currently http-01, dns-01 and tls-alpn-01 are supported
{{ get_config('challengetype', 'http-01') }}

# Path to a directory containing additional config files, allowing to override
# the defaults found in the main configuration file. Additional config files
# in this directory needs to be named with a '.sh' ending.
# default: <unset>
{{ get_config('config_d', '') }}

# Directory for per-domain configuration files.
# If not set, per-domain configurations are sourced from each certificates output directory.
# default: <unset>
{{ get_config('domains_d', '') }}

# Base directory for account key, generated certificates and list of domains (default: $SCRIPTDIR -- uses config directory if undefined)
{{ get_config('basedir', '/var/lib/dehydrated') }}

# File containing the list of domains to request certificates for (default: $BASEDIR/domains.txt)
{{ get_config('domains-txt', '${BASEDIR}/domains.txt') }}

# Output directory for generated certificates
{{ get_config('certdir', '${BASEDIR}/certs') }}

# Output directory for alpn verification certificates
{{ get_config('alpncertdir', '${BASEDIR}/alpn-certs') }}

# Directory for account keys and registration information
{{ get_config('accountdir', '${BASEDIR}/accounts') }}

# Output directory for challenge-tokens to be served by webserver or deployed in HOOK (default: /var/www/letsencrypt)
{{ get_config('wellknown', '/var/www/letsencrypt') }}

# Default keysize for private keys (default: 4096)
{{ get_config('keysize', '4096') }}

# Path to openssl config file (default: <unset> - tries to figure out system default)
{{ get_config('openssl_cnf', '') }}

# Path to OpenSSL binary (default: "openssl")
{{ get_config('openssl', 'openssl') }}

# Extra options passed to the curl binary (default: <unset>)
{{ get_config('curl-opts', '') }}

# Program or function called in certain situations
#
# After generating the challenge-response, or after failed challenge (in this case altname is empty)
# Given arguments: clean_challenge|deploy_challenge altname token-filename token-content
#
# After successfully signing certificate
# Given arguments: deploy_cert domain path/to/privkey.pem path/to/cert.pem path/to/fullchain.pem
#
# BASEDIR and WELLKNOWN variables are exported and can be used in an external program
# default: <unset>
{{ get_config('hook', '') }}

# Chain clean_challenge|deploy_challenge arguments together into one hook call per certificate (default: no)
{{ get_config('hook-chain', 'no') }}

# Minimum days before expiration to automatically renew certificate (default: 30)
{{ get_config('renew-days', '30') }}

# Regenerate private keys instead of just signing new certificates on renewal (default: yes)
{{ get_config('private-key-renew', 'yes') }}

# Create an extra private key for rollover (default: no)
{{ get_config('private-key-rollover', 'no') }}

# Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1
{{ get_config('key-algo', 'rsa') }}

# E-mail to use during the registration (default: <unset>)
{{ get_config('contact-email', '') }}

# Lockfile location, to prevent concurrent access (default: $BASEDIR/lock)
{{ get_config('lockfile', '${BASEDIR}/lock') }}

# Option to add CSR-flag indicating OCSP stapling to be mandatory (default: no)
{{ get_config('ocsp-must-staple', 'no') }}

# Fetch OCSP responses (default: no)
{{ get_config('ocsp-fetch', 'no') }}

# OCSP refresh interval (default: 5 days)
{{ get_config('ocsp-days', '5') }}

# Issuer chain cache directory (default: $BASEDIR/chains)
{{ get_config('chaincache', '${BASEDIR}/chains') }}

# Automatic cleanup (default: no)
{{ get_config('auto-cleanup', 'no') }}

# ACME API version (default: auto)
{{ get_config('api', 'auto') }}

# Preferred issuer chain (default: <unset> -> uses default chain)
{{ get_config('preferred-chain', '') }}
